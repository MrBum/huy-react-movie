{"ast":null,"code":"var _jsxFileName = \"/Users/HuyDocument /react-app/bum-react/src/Content.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabs = ['comments', 'posts', 'albums'];\n\nfunction Content() {\n  _s();\n\n  const [post, setPost] = useState([]);\n  const [type, setType] = useState('comments');\n  const [showtoTop, setShowtoTop] = useState(false);\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/${type}`).then(res => res.json()).then(data => {\n      setPost(data);\n    });\n  }, [type]);\n  useEffect(() => {\n    const handleScroll = () => {\n      console.log(window.scrollY);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tabs.map(tabs => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setType(tabs),\n      children: [\" \", tabs, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: post.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: data.title || data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Content, \"ngKiQ+euQByHj9vsu5i83Aj4xBc=\");\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/HuyDocument /react-app/bum-react/src/Content.js"],"names":["useEffect","useState","tabs","Content","post","setPost","type","setType","showtoTop","setShowtoTop","fetch","then","res","json","data","handleScroll","console","log","window","scrollY","addEventListener","map","title","name"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,IAAI,GAAG,CAAC,UAAD,EAAa,OAAb,EAAsB,QAAtB,CAAb;;AACA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,UAAD,CAAhC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAE,wCAAuCJ,IAAK,EAA9C,CAAL,CACGK,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZT,MAAAA,OAAO,CAACS,IAAD,CAAP;AACD,KAJH;AAKD,GANQ,EAMN,CAACR,IAAD,CANM,CAAT;AAQAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,YAAY,GAAG,MAAM;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAnB;AACD,KAFD;;AAIAD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCL,YAAlC;AACD,GANQ,EAMN,EANM,CAAT;AAOA,sBACE;AAAA,eACGb,IAAI,CAACmB,GAAL,CAASnB,IAAI,iBACZ;AAAQ,MAAA,OAAO,EAAE,MAAMK,OAAO,CAACL,IAAD,CAA9B;AAAA,sBAAwCA,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAKE;AAAA,gBACGE,IAAI,CAACiB,GAAL,CAASP,IAAI,iBACZ;AAAA,kBAAKA,IAAI,CAACQ,KAAL,IAAcR,IAAI,CAACS;AAAxB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAjCQpB,O;;KAAAA,O;AAmCT,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from 'react'\n\nconst tabs = ['comments', 'posts', 'albums']\nfunction Content() {\n  const [post, setPost] = useState([])\n  const [type, setType] = useState('comments')\n  const [showtoTop, setShowtoTop] = useState(false)\n\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/${type}`)\n      .then(res => res.json())\n      .then(data => {\n        setPost(data)\n      })\n  }, [type])\n\n  useEffect(() => {\n    const handleScroll = () => {\n      console.log(window.scrollY)\n    }\n\n    window.addEventListener('scroll', handleScroll)\n  }, [])\n  return (\n    <div>\n      {tabs.map(tabs => (\n        <button onClick={() => setType(tabs)}> {tabs} </button>\n      ))}\n\n      <ul>\n        {post.map(data => (\n          <li>{data.title || data.name}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Content\n"]},"metadata":{},"sourceType":"module"}