{"ast":null,"code":"var _jsxFileName = \"/Users/HuyDocument /react-app/bum-react/src/component/Content/content.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Content() {\n  _s();\n\n  const [count, setCount] = useState(10);\n  const timeID = useRef(0);\n  const preCount = useRef(0);\n\n  const handleStart = () => {\n    timeID.current = setInterval(() => {\n      setCount(previousCount => previousCount - 1);\n    }, 1000);\n    console.log('Start:', timeID.current);\n  };\n\n  const handleStop = () => {\n    clearInterval(timeID.current);\n    console.log('Stop:', timeID.current);\n  };\n\n  useEffect(() => {\n    if (count <= 0) {\n      handleStop();\n    }\n\n    preCount.current = count;\n  }, [count]);\n  console.log('Count: ', count, 'preCount', preCount.current);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-primary\",\n      variant: \"contained\",\n      onClick: handleStart,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-primary\",\n      variant: \"contained\",\n      onClick: handleStop,\n      children: \"STOP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Content, \"yMcsVEonSgjOmfUSy9XGm/D+dSg=\");\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/HuyDocument /react-app/bum-react/src/component/Content/content.js"],"names":["useEffect","useState","useRef","Button","Content","count","setCount","timeID","preCount","handleStart","current","setInterval","previousCount","console","log","handleStop","clearInterval"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AACA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMM,MAAM,GAAGL,MAAM,CAAC,CAAD,CAArB;AACA,QAAMM,QAAQ,GAAGN,MAAM,CAAC,CAAD,CAAvB;;AACA,QAAMO,WAAW,GAAG,MAAM;AACxBF,IAAAA,MAAM,CAACG,OAAP,GAAiBC,WAAW,CAAC,MAAM;AACjCL,MAAAA,QAAQ,CAACM,aAAa,IAAIA,aAAa,GAAG,CAAlC,CAAR;AACD,KAF2B,EAEzB,IAFyB,CAA5B;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,MAAM,CAACG,OAA7B;AACD,GALD;;AAMA,QAAMK,UAAU,GAAG,MAAM;AACvBC,IAAAA,aAAa,CAACT,MAAM,CAACG,OAAR,CAAb;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,MAAM,CAACG,OAA5B;AACD,GAHD;;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,KAAK,IAAI,CAAb,EAAgB;AACdU,MAAAA,UAAU;AACX;;AACDP,IAAAA,QAAQ,CAACE,OAAT,GAAmBL,KAAnB;AACD,GALQ,EAKN,CAACA,KAAD,CALM,CAAT;AAOAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,KAAvB,EAA8B,UAA9B,EAA0CG,QAAQ,CAACE,OAAnD;AACA,sBACE;AAAA,4BACE;AAAA,gBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,OAAO,EAAEI,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,MAAD;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,OAAO,EAAEM,UAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAzCQX,O;;KAAAA,O;AA0CT,eAAeA,OAAf","sourcesContent":["import { useEffect, useState, useRef } from 'react'\nimport Button from '@mui/material/Button'\nfunction Content() {\n  const [count, setCount] = useState(10)\n  const timeID = useRef(0)\n  const preCount = useRef(0)\n  const handleStart = () => {\n    timeID.current = setInterval(() => {\n      setCount(previousCount => previousCount - 1)\n    }, 1000)\n    console.log('Start:', timeID.current)\n  }\n  const handleStop = () => {\n    clearInterval(timeID.current)\n    console.log('Stop:', timeID.current)\n  }\n  useEffect(() => {\n    if (count <= 0) {\n      handleStop()\n    }\n    preCount.current = count\n  }, [count])\n\n  console.log('Count: ', count, 'preCount', preCount.current)\n  return (\n    <div>\n      <h1>{count}</h1>\n      <Button\n        className=\"btn btn-primary\"\n        variant=\"contained\"\n        onClick={handleStart}\n      >\n        Run\n      </Button>\n      <Button\n        className=\"btn btn-primary\"\n        variant=\"contained\"\n        onClick={handleStop}\n      >\n        STOP\n      </Button>\n    </div>\n  )\n}\nexport default Content\n"]},"metadata":{},"sourceType":"module"}