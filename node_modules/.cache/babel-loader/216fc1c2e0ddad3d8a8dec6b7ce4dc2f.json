{"ast":null,"code":"var _jsxFileName = \"/Users/HuyDocument /react-app/bum-react/src/ThemeContext.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\n\nfunction ThemeProvider(_ref) {\n  _s();\n\n  let {\n    child\n  } = _ref;\n  const [theme, setTheme] = useState('dark');\n\n  const handleSetTheme = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  const value = {\n    theme,\n    handleSetTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value.theme,\n    children: child\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThemeProvider, \"sDHyzaxN8G4vvn/5pnEI6TWCVhM=\");\n\n_c = ThemeProvider;\nexport { ThemeProvider, ThemeContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/Users/HuyDocument /react-app/bum-react/src/ThemeContext.js"],"names":["useState","createContext","ThemeContext","ThemeProvider","child","theme","setTheme","handleSetTheme","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,QAAwC,OAAxC;;AACA,MAAMC,YAAY,gBAAGD,aAAa,EAAlC;;AACA,SAASE,aAAT,OAAkC;AAAA;;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,MAAD,CAAlC;;AACA,QAAMO,cAAc,GAAG,MAAM;AAC3BD,IAAAA,QAAQ,CAACD,KAAK,KAAK,MAAV,GAAmB,OAAnB,GAA6B,MAA9B,CAAR;AACD,GAFD;;AAGA,QAAMG,KAAK,GAAG;AACZH,IAAAA,KADY;AAEZE,IAAAA;AAFY,GAAd;AAIA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,KAAK,CAACH,KAApC;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAdQD,a;;KAAAA,a;AAeT,SAASA,aAAT,EAAwBD,YAAxB","sourcesContent":["import { useState, createContext } from 'react'\nconst ThemeContext = createContext()\nfunction ThemeProvider({ child }) {\n  const [theme, setTheme] = useState('dark')\n  const handleSetTheme = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark')\n  }\n  const value = {\n    theme,\n    handleSetTheme\n  }\n  return (\n    <ThemeContext.Provider value={value.theme}>\n      {child}\n    </ThemeContext.Provider>\n  )\n}\nexport { ThemeProvider, ThemeContext }\n"]},"metadata":{},"sourceType":"module"}