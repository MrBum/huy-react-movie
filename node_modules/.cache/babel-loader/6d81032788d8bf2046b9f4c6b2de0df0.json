{"ast":null,"code":"var _jsxFileName = \"/Users/HuyDocument /react-app/bum-react/src/ThemeContext.js\",\n    _s = $RefreshSig$();\n\n// import { useState, createContext } from 'react'\n// export const ThemeContext = createContext()\n// export function ThemeProvider({ child }) {\n//   const [theme, setTheme] = useState('dark')\n//   const handleSetTheme = () => {\n//     setTheme(theme === 'dark' ? 'light' : 'dark')\n//   }\n//   const value = {\n//     theme,\n//     handleSetTheme\n//   }\n//   return (\n//     <ThemeContext.Provider value={value}>\n//       {child}\n//     </ThemeContext.Provider>\n//   )\n// }\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChangeTheme = /*#__PURE__*/createContext();\nexport function ThemeProvicer(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [color, setColor] = useState('blue');\n\n  function HandleChangeColor() {\n    setColor(color === 'blue' ? 'red' : 'blue');\n  }\n\n  const value = {\n    color,\n    HandleChangeColor\n  };\n  return /*#__PURE__*/_jsxDEV(ChangeTheme.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThemeProvicer, \"1nHDiXj5DbCdZ70vxuIyMw9nFnk=\");\n\n_c = ThemeProvicer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvicer\");","map":{"version":3,"sources":["/Users/HuyDocument /react-app/bum-react/src/ThemeContext.js"],"names":["createContext","useState","ChangeTheme","ThemeProvicer","children","color","setColor","HandleChangeColor","value"],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;AACP,OAAO,SAASG,aAAT,OAAqC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,MAAD,CAAlC;;AACA,WAASM,iBAAT,GAA6B;AAC3BD,IAAAA,QAAQ,CAACD,KAAK,KAAK,MAAV,GAAmB,KAAnB,GAA2B,MAA5B,CAAR;AACD;;AACD,QAAMG,KAAK,GAAG;AAAEH,IAAAA,KAAF;AAASE,IAAAA;AAAT,GAAd;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,KAA7B;AAAA,cACGJ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAXeD,a;;KAAAA,a","sourcesContent":["// import { useState, createContext } from 'react'\n// export const ThemeContext = createContext()\n\n// export function ThemeProvider({ child }) {\n//   const [theme, setTheme] = useState('dark')\n//   const handleSetTheme = () => {\n//     setTheme(theme === 'dark' ? 'light' : 'dark')\n//   }\n//   const value = {\n//     theme,\n//     handleSetTheme\n//   }\n//   return (\n//     <ThemeContext.Provider value={value}>\n//       {child}\n//     </ThemeContext.Provider>\n//   )\n// }\nimport { createContext, useState } from 'react'\n\nexport const ChangeTheme = createContext()\nexport function ThemeProvicer({ children }) {\n  const [color, setColor] = useState('blue')\n  function HandleChangeColor() {\n    setColor(color === 'blue' ? 'red' : 'blue')\n  }\n  const value = { color, HandleChangeColor }\n  return (\n    <ChangeTheme.Provider value={value}>\n      {children}\n    </ChangeTheme.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}